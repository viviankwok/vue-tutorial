{"ast":null,"code":"import Tasks from \"../components/Tasks.vue\";\nimport AddTask from \"../components/AddTask.vue\";\nexport default {\n  name: \"Home\",\n  components: {\n    Tasks,\n    AddTask\n  },\n  data: {\n    tasks: []\n  },\n  methods: {\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n\n    async addTask(task) {\n      const res = await fetch(\"api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(task)\n      });\n      const data = await res.json();\n      this.tasks = [...this.tasks, data];\n    },\n\n    async deleteTask(id) {\n      if (confirm(\"Are you sure?\")) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: \"DELETE\"\n        });\n        res.status === 200 ? this.tasks = this.tasks.filter(task => task.id !== id) : alert(\"Error deleting task\");\n      }\n    },\n\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id);\n      const updTask = { ...taskToToggle,\n        reminder: !taskToToggle.reminder\n      };\n      const res = await fetch(`api/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(updTask)\n      });\n      const data = await res.json();\n      this.tasks = this.tasks.map(task => task.id === id ? { ...task,\n        reminder: data.reminder\n      } : task);\n    },\n\n    async fetchTasks() {\n      const res = await fetch(\"api/tasks\");\n      const data = await res.json();\n      return data;\n    },\n\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`);\n      const data = await res.json();\n      return data;\n    }\n\n  },\n\n  async created() {\n    this.tasks = await this.fetchTasks();\n  }\n\n};","map":{"version":3,"mappings":"AAYA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe;EACbC,IAAI,EAAE,MADO;EAEbC,UAAU,EAAE;IACVH,KADU;IAEVC;EAFU,CAFC;EAMbG,IAAI,EAAE;IACJC,KAAK,EAAE;EADH,CANO;EASbC,OAAO,EAAE;IACPC,aAAa,GAAG;MACd,KAAKC,WAAL,GAAmB,CAAC,KAAKA,WAAzB;IACD,CAHM;;IAKP,MAAMC,OAAN,CAAcC,IAAd,EAAoB;MAClB,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,WAAD,EAAc;QACnCC,MAAM,EAAE,MAD2B;QAEnCC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAF0B;QAGnCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;MAH6B,CAAd,CAAvB;MAMA,MAAMN,IAAG,GAAI,MAAMO,GAAG,CAACO,IAAJ,EAAnB;MAEA,KAAKb,KAAL,GAAa,CAAC,GAAG,KAAKA,KAAT,EAAgBD,IAAhB,CAAb;IACD,CAfM;;IAgBP,MAAMe,UAAN,CAAiBC,EAAjB,EAAqB;MACnB,IAAIC,OAAO,CAAC,eAAD,CAAX,EAA8B;QAC5B,MAAMV,GAAE,GAAI,MAAMC,KAAK,CAAE,aAAYQ,EAAG,EAAjB,EAAoB;UACzCP,MAAM,EAAE;QADiC,CAApB,CAAvB;QAIAF,GAAG,CAACW,MAAJ,KAAe,GAAf,GACK,KAAKjB,KAAL,GAAa,KAAKA,KAAL,CAAWkB,MAAX,CAAmBb,IAAD,IAAUA,IAAI,CAACU,EAAL,KAAYA,EAAxC,CADlB,GAEII,KAAK,CAAC,qBAAD,CAFT;MAGF;IACD,CA1BM;;IA2BP,MAAMC,cAAN,CAAqBL,EAArB,EAAyB;MACvB,MAAMM,YAAW,GAAI,MAAM,KAAKC,SAAL,CAAeP,EAAf,CAA3B;MACA,MAAMQ,OAAM,GAAI,EAAE,GAAGF,YAAL;QAAmBG,QAAQ,EAAE,CAACH,YAAY,CAACG;MAA3C,CAAhB;MAEA,MAAMlB,GAAE,GAAI,MAAMC,KAAK,CAAE,aAAYQ,EAAG,EAAjB,EAAoB;QACzCP,MAAM,EAAE,KADiC;QAEzCC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFgC;QAKzCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,OAAf;MALmC,CAApB,CAAvB;MAQA,MAAMxB,IAAG,GAAI,MAAMO,GAAG,CAACO,IAAJ,EAAnB;MAEA,KAAKb,KAAL,GAAa,KAAKA,KAAL,CAAWyB,GAAX,CAAgBpB,IAAD,IAC1BA,IAAI,CAACU,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGV,IAAL;QAAWmB,QAAQ,EAAEzB,IAAI,CAACyB;MAA1B,CAAjB,GAAwDnB,IAD7C,CAAb;IAGD,CA5CM;;IA6CP,MAAMqB,UAAN,GAAmB;MACjB,MAAMpB,GAAE,GAAI,MAAMC,KAAK,CAAC,WAAD,CAAvB;MACA,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACO,IAAJ,EAAnB;MACA,OAAOd,IAAP;IACD,CAjDM;;IAmDP,MAAMuB,SAAN,CAAgBP,EAAhB,EAAoB;MAClB,MAAMT,GAAE,GAAI,MAAMC,KAAK,CAAE,aAAYQ,EAAG,EAAjB,CAAvB;MACA,MAAMhB,IAAG,GAAI,MAAMO,GAAG,CAACO,IAAJ,EAAnB;MACA,OAAOd,IAAP;IACD;;EAvDM,CATI;;EAmEb,MAAM4B,OAAN,GAAgB;IACd,KAAK3B,KAAL,GAAa,MAAM,KAAK0B,UAAL,EAAnB;EACD;;AArEY,CAAf","names":["Tasks","AddTask","name","components","data","tasks","methods","toggleAddTask","showAddTask","addTask","task","res","fetch","method","headers","body","JSON","stringify","json","deleteTask","id","confirm","status","filter","alert","toggleReminder","taskToToggle","fetchTask","updTask","reminder","map","fetchTasks","created"],"sourceRoot":"","sources":["/Users/vivian/Desktop/vue-crash-course/src/views/Home.vue"],"sourcesContent":["<template>\n  <div v-show=\"showAddTask\">\n    <AddTask @add-task=\"addTask\" />\n  </div>\n  <Tasks\n    @toggle-reminder=\"toggleReminder\"\n    @delete-task=\"deleteTask\"\n    :tasks=\"tasks\"\n  />\n</template>\n\n<script>\nimport Tasks from \"../components/Tasks.vue\";\nimport AddTask from \"../components/AddTask.vue\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    Tasks,\n    AddTask,\n  },\n  data: {\n    tasks: [],\n  },\n  methods: {\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n\n    async addTask(task) {\n      const res = await fetch(\"api/tasks\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify(task),\n      });\n\n      const data = await res.json();\n\n      this.tasks = [...this.tasks, data];\n    },\n    async deleteTask(id) {\n      if (confirm(\"Are you sure?\")) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: \"DELETE\",\n        });\n\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert(\"Error deleting task\");\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id);\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n      const res = await fetch(`api/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(updTask),\n      });\n\n      const data = await res.json();\n\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      );\n    },\n    async fetchTasks() {\n      const res = await fetch(\"api/tasks\");\n      const data = await res.json();\n      return data;\n    },\n\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`);\n      const data = await res.json();\n      return data;\n    },\n  },\n\n  async created() {\n    this.tasks = await this.fetchTasks();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}